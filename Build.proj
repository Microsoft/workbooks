<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="Build"
  ToolsVersion="12.0">
  <Import Project="$(MSBuildThisFileDirectory)Build\Xamarin.Build\Xamarin.Build.targets"/>
  <Import Project="$(MSBuildThisFileDirectory)Build\Metadata.targets"/>
  <Import Project="$(MSBuildThisFileDirectory)Build\Utility.targets"/>
  <Import
    Project="$(MSBuildThisFileDirectory)workbooks-proprietary\provisionator.targets"
    Condition="Exists('$(MSBuildThisFileDirectory)workbooks-proprietary\provisionator.targets')"/>
  <Import
    Project="$(MSBuildThisFileDirectory)Build\Local.props"
    Condition="Exists('$(MSBuildThisFileDirectory)Build\Local.props')"/>

  <PropertyGroup>
    <SolutionPlatform Condition="'$(OS)' == 'Windows_NT'">Windows</SolutionPlatform>
    <SolutionPlatform Condition="'$(OS)' == 'Unix'">macOS</SolutionPlatform>
    <Provisionator_ArtifactCachePath Condition="'$(Provisionator_ArtifactCachePath)' == ''">$(MSBuildThisFileDirectory)</Provisionator_ArtifactCachePath>
  </PropertyGroup>

  <!-- External Tools -->
  <PropertyGroup Condition="'$(SolutionPlatform)' == 'Windows'">
    <WrenchAdb>C:\Users\builder\AppData\Local\Android\android-sdk\platform-tools\adb.exe</WrenchAdb>
    <SevenZip>C:\Program Files\7-zip\7z.exe</SevenZip>
  </PropertyGroup>
  <PropertyGroup Condition="'$(SolutionPlatform)' == 'macOS'">
    <CILStrip>/Library/Frameworks/Mono.framework/Versions/Current/Commands/mono-cil-strip</CILStrip>
  </PropertyGroup>
  <PropertyGroup>
    <Npm Condition="'$(Npm)' == ''">npm</Npm>
    <NuGet Condition="'$(NuGet)' == '' And Exists('$(Provisionator_ArtifactCachePath)nuget.exe')">$(Provisionator_ArtifactCachePath)nuget.exe</NuGet>
  </PropertyGroup>

  <!-- Build Tasks -->
  <PropertyGroup>
    <XIMSBuildTasksDir>$(MSBuildThisFileDirectory)Bootstrap\Xamarin.Interactive.MSBuild\</XIMSBuildTasksDir>
    <XIMSBuildTasksAssembly>$(XIMSBuildTasksDir)Xamarin.Interactive.MSBuild.dll</XIMSBuildTasksAssembly>
  </PropertyGroup>

  <!-- General Configuration -->
  <PropertyGroup>
    <SolutionToBuild>Xamarin.Interactive.sln</SolutionToBuild>
    <SolutionProperties>$(SolutionProperties);Platform=$(SolutionPlatform)</SolutionProperties>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <MSBuildCommonProperties>
      $(MSBuildCommonProperties);
      Configuration=$(Configuration)
    </MSBuildCommonProperties>

    <InstallDestDir Condition="'$(InstallDestDir)' == ''">_install\</InstallDestDir>
    <PackageOutputDir Condition="'$(PackageOutputDir)' == ''">_artifacts\</PackageOutputDir>
    <FrameworkInstallDir>$(InstallDestDir)Library\Frameworks\Xamarin.Interactive.framework\Versions\Current\</FrameworkInstallDir>

    <BuildInfoDistFile>Package/buildinfo</BuildInfoDistFile>
  </PropertyGroup>

  <!-- Platform Specific Configuration -->
  <PropertyGroup Condition="'$(SolutionPlatform)' == 'Windows'">
    <UpdateInfoFile>Package\Windows\updateinfo</UpdateInfoFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(SolutionPlatform)' == 'macOS'">
    <UpdateInfoFile>Package\Mac\updateinfo</UpdateInfoFile>
  </PropertyGroup>

  <!-- XVS mac build host configuration (in VSTS) -->
  <PropertyGroup Condition="'$(TF_BUILD)' == 'True'">
    <MacBuildHostAddress>bockover-1.guest.corp.microsoft.com</MacBuildHostAddress>
    <MacBuildHostUser>builder</MacBuildHostUser>
  </PropertyGroup>

  <PropertyGroup>
    <WorkbooksIntegrationNuGetPackageVersion>1.0.0-rc4</WorkbooksIntegrationNuGetPackageVersion>
  </PropertyGroup>

  <Target Name="BuildAndTest">
    <MSBuild
      Projects="$(MSBuildProjectFile)"
      Targets="UpdateBuildInfo;Build;Package;TestRegressions"
      Properties="Configuration=Release"/>
    <Message Text="Congratulations! Here's an ounce of confidence in your pull request!" Importance="high"/>
  </Target>

  <Target Name="_NpmInstall">
    <Exec Command="$(Npm) install --save-dev" WorkingDirectory="$(MSBuildThisFileDirectory)"/>
  </Target>

  <Target Name="ProvisioningCheck">
    <CallTarget
      Condition=" '$(Provisionator)' != '' "
      Targets="_ProvisioningCheck"/>
  </Target>

  <Target Name="_Bootstrap" DependsOnTargets="
    ProvisioningCheck;
    Xamarin_Build_ReadAllProperties;
    _NpmInstall"/>

  <!-- Build and Clean use the same _Build* targets since the only difference is the Target passed to each csproj/sln.
       We use MSBuild instead of CallTarget as an easy way to pass along said Target. Also, Rebuild requires calling
       _Build* targets twice, and CallTarget does not allow that. -->
  <Target Name="Build" DependsOnTargets="_Bootstrap;UpdateInvertedDependencies">
    <MSBuild
      Condition="'$(SolutionPlatform)' == 'macOS'"
      Projects="$(MSBuildProjectFile)"
      Targets="_BuildMac;_BuildProprietary"
      Properties="InteractiveBuildTarget=Build"/>
    <MSBuild
      Projects="$(MSBuildProjectFile)"
      Targets="_BuildWin;_BuildProprietary;GenerateSignFiles;_KillWrenchAdbServer"
      RunEachTargetSeparately="true"
      Properties="InteractiveBuildTarget=Build"
      Condition="'$(SolutionPlatform)' == 'Windows'"/>
  </Target>

  <Target Name="Clean">
    <MSBuild Condition="'$(SolutionPlatform)' == 'macOS'"
      Projects="$(MSBuildProjectFile)"
      Targets="_BuildMac"
      Properties="InteractiveBuildTarget=Clean"/>
    <MSBuild Condition="'$(SolutionPlatform)' == 'Windows'"
      Projects="$(MSBuildProjectFile)"
      Targets="_BuildWin"
      Properties="InteractiveBuildTarget=Clean" />
  </Target>

  <Target Name="_BuildMac">
    <Exec Command="xcrun -k"/>
    <MSBuild
      BuildInParallel="true"
      Projects="$(SolutionToBuild)"
      Properties="$(SolutionProperties);$(MSBuildCommonProperties)"
      Targets="$(InteractiveBuildTarget)"/>
  </Target>

  <Target Name="_BuildWin">
    <!-- Build "Xamarin Inspector.exe" -->
    <MSBuild
      BuildInParallel="true"
      Projects="Clients\Xamarin.Interactive.Client.Windows\Xamarin.Interactive.Client.Windows.csproj"
      Properties="$(MSBuildCommonProperties);ClientOutputPathSuffix=InspectorExe;ClientAssemblyName=Xamarin Inspector;ClientDefineConstants=CLIENT_FLAVOR_INSPECTOR"
      Targets="$(InteractiveBuildTarget)"/>
    <!-- Build everything else -->
    <MSBuild
      BuildInParallel="true"
      Projects="$(SolutionToBuild)"
      Properties="$(SolutionProperties);$(MSBuildCommonProperties);ServerAddress=$(MacBuildHostAddress);ServerUser=$(MacBuildHostUser)"
      Targets="$(InteractiveBuildTarget)"/>
  </Target>

  <Target
    Condition="Exists('workbooks-proprietary\Build.proj')"
    Name="_BuildProprietary">
    <MSBuild
      Projects="workbooks-proprietary\Build.proj"
      Properties="$(SolutionProperties);$(MSBuildCommonProperties)"
      Targets="Build"/>
  </Target>

  <Target Name="_KillWrenchAdbServer">
    <Exec
      Command="$(WrenchAdb) kill-server"
      Condition="Exists('$(WrenchAdb)')"/>
  </Target>

  <Target Name="Rebuild">
    <CallTarget Targets="Clean;Build"/>
  </Target>

  <Target Name="Install">
    <CallTarget Targets="_InstallMac" Condition="'$(SolutionPlatform)' == 'macOS'"/>
    <CallTarget Targets="_InstallWin" Condition="'$(SolutionPlatform)' == 'Windows'"/>
  </Target>

  <Target Name="_InstallWin" DependsOnTargets="Xamarin_Build_ReadAllProperties">
    <MSBuild
      BuildInParallel="true"
      Projects="Package\Windows\Xamarin.Interactive.Windows.Installer.wixproj"
      Properties="$(MSBuildCommonProperties);Configuration=Release;BuildProjectReferences=false"
      Targets="Build"/>
  </Target>

  <PropertyGroup>
    <InstallDependsOnMac>
      _UninstallMac;
      _InstallUninstallerMac;
      _InstallBuildInfoMac;
      _InstallUpdateInfoMac;
      _InstallSDKMac;
      _InstallAgentsMac;
      _InstallClientAppMac
    </InstallDependsOnMac>
  </PropertyGroup>

  <Target Name="_InstallMac" DependsOnTargets="$(InstallDependsOnMac)"/>

  <Target Name="_UninstallMac">
    <Exec Command="DSTROOT=&quot;$(InstallDestDir)&quot; $(MSBuildThisFileDirectory)Package\Mac\uninstall -f"/>
  </Target>

  <ItemGroup>
    <SDKFiles Include="Agents\Xamarin.Interactive\bin\$(Configuration)\Xamarin.Interactive.dll" />
    <SDKFiles Include="Agents\Xamarin.Interactive\bin\$(Configuration)\Xamarin.Interactive.pdb" />
    <SDKFiles Include="Clients\Xamarin.Interactive.Client\ClientApp\typings\xamarin-interactive.d.ts"/>
  </ItemGroup>

  <Target Name="_InstallUninstallerMac">
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="$(MSBuildThisFileDirectory)Package\Mac\uninstall"
      DestinationFolder="$(FrameworkInstallDir)"/>
  </Target>

  <Target Name="_InstallBuildInfoMac">
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="Package\buildinfo"
      DestinationFolder="$(FrameworkInstallDir)"/>
  </Target>

  <Target Name="_InstallUpdateInfoMac">
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="$(UpdateInfoFile)"
      DestinationFolder="$(FrameworkInstallDir)"/>
  </Target>

  <Target Name="_InstallSDKMac">
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(SDKFiles)"
      DestinationFolder="$(FrameworkInstallDir)SDK"/>
  </Target>

  <ItemGroup>
    <AndroidAgentFiles Include="Agents\Xamarin.Interactive.Android\bin\$(Configuration)\monoandroid\*"/>
    <AndroidFormsAgentFiles Include="Agents\Xamarin.Interactive.Forms.Android\bin\$(Configuration)\monoandroid\*"/>
    <iOSAgentFiles Include="Agents\Xamarin.Interactive.iOS\bin\$(Configuration)\Xamarin.iOS10\*"/>
    <iOSFormsAgentFiles Include="Agents\Xamarin.Interactive.Forms.iOS\bin\$(Configuration)\Xamarin.iOS10\*"/>
    <MacMobileAgentFiles Include="Agents\Xamarin.Interactive.Mac.Mobile\bin\$(Configuration)\Net45\*"/>
    <MacDesktopAgentFiles Include="Agents\Xamarin.Interactive.Mac.Desktop\bin\$(Configuration)\Net45\*"/>
    <ConsoleAgentFiles Include="Agents\Xamarin.Interactive.Console\bin\$(Configuration)\*"/>
    <DotNetCoreAgentFiles Include="Agents\Xamarin.Interactive.DotNetCore\bin\$(Configuration)\netstandard2.0\*"/>
    <ReferenceAssemblyFile Include="Agents\Xamarin.Interactive.NetStandard\bin\$(Configuration)\netstandard2.0\ref-Xamarin.Interactive.dll"/>
  </ItemGroup>

  <Target Name="_InstallAgentsMac">
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(AndroidAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\Android"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(iOSAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\iOS"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(MacMobileAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\Mac\Mobile"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(MacDesktopAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\Mac\Desktop"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(ConsoleAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\Console"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(AndroidFormsAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\Forms\Android"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(iOSFormsAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\Forms\iOS"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(DotNetCoreAgentFiles)"
      DestinationFolder="$(FrameworkInstallDir)Agents\DotNetCore"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(ReferenceAssemblyFile)"
      DestinationFolder="$(FrameworkInstallDir)Agents\DotNetCore"/>
  </Target>

  <ItemGroup>
    <SimCheckerFiles Include="Clients\Xamarin.Interactive.Client.Mac.SimChecker\bin\$(Configuration)\*"/>
  </ItemGroup>

  <Target Name="_InstallClientAppMac">
    <PropertyGroup>
      <WorkbooksAppBundleName>Xamarin Workbooks.app</WorkbooksAppBundleName>
      <WorkbooksAppBundlePath>Clients\Xamarin.Interactive.Client.Mac\bin\$(Configuration)\$(WorkbooksAppBundleName)</WorkbooksAppBundlePath>
      <InspectorAppBundlePath>Clients\Xamarin.Interactive.Client.Mac\bin\$(Configuration)\Xamarin Inspector.app</InspectorAppBundlePath>
    </PropertyGroup>

    <MakeDir Directories="$(InstallDestDir)Applications"/>
    <Exec Command="cp -a &quot;$(WorkbooksAppBundlePath)&quot; &quot;$(InstallDestDir)Applications&quot;"/>
    <MakeDir Directories="$(InstallDestDir)Applications\$(WorkbooksAppBundleName)\Contents\SharedSupport"/>
    <Exec Command="cp -a &quot;_build\$(Configuration)\WorkbookApps&quot; &quot;$(InstallDestDir)Applications\$(WorkbooksAppBundleName)\Contents\SharedSupport&quot;"/>

    <MakeDir Directories="$(FrameworkInstallDir)InspectorClient"/>
    <Exec Command="cp -a &quot;$(InspectorAppBundlePath)&quot; &quot;$(FrameworkInstallDir)InspectorClient&quot;"/>
  </Target>

  <Target Name="Package">
    <MakeDir Directories="$(PackageOutputDir)"/>
    <CallTarget Targets="_PackageMac" Condition="'$(SolutionPlatform)' == 'macOS'"/>
    <CallTarget Targets="_PackageWin" Condition="'$(SolutionPlatform)' == 'Windows'"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="$(UpdateInfoFile)"
      DestinationFolder="$(PackageOutputDir)"/>
    <Message Text="Generated $(PackageOutputDir)updateinfo" Importance="high"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="$(BuildInfoDistFile)"
      DestinationFolder="$(PackageOutputDir)"/>
    <Message Text="Generated $(PackageOutputDir)buildinfo" Importance="high"/>
    <CallTarget Targets="PackageNuGet" Condition="'$(SolutionPlatform)' == 'macOS'"/>
    <CallTarget Targets="GenerateReleaseNotes" Condition="'$(SolutionPlatform)' == 'macOS'"/>
  </Target>

  <Target Name="_PackageMac" DependsOnTargets="Install;Xamarin_Build_ReadAllProperties">
    <PropertyGroup>
      <PackageFile>$(PackageOutputDir)XamarinInteractive-$(ReleaseVersion_SemVer).pkg</PackageFile>
    </PropertyGroup>

    <Exec
      Condition="'$(CodesignKeychainPassword)' != ''"
      Command="security unlock-keychain -p &quot;$(CodesignKeychainPassword)&quot;"/>

    <ItemGroup>
      <Replacement Include="@VERSION@">
        <Value>$(ReleaseVersion_AppleCFBundleVersion)</Value>
      </Replacement>
      <Replacement Include="@FRIENDLY_VERSION@">
        <Value>$(ReleaseVersion_FriendlyLong)</Value>
      </Replacement>
    </ItemGroup>
    <Copy
      SourceFiles="Package\Mac\Distribution.xml.in"
      DestinationFiles="Package\Mac\Distribution.xml"/>
    <FindReplaceInFiles
      Files="Package\Mac\Distribution.xml"
      Replacements="@(Replacement)"/>

    <ItemGroup>
      <PkgBuild Include="pkgbuild"/>
      <PkgBuild Include="--root $(InstallDestDir)"/>
      <PkgBuild Include="--component-plist Package\Mac\Components.plist"/>
      <PkgBuild Include="--install-location \"/>
      <PkgBuild Include="--scripts Package\Mac\Scripts"/>
      <PkgBuild Include="--identifier com.xamarin.Inspector"/>
      <PkgBuild Include="--version $(ReleaseVersion_AppleCFBundleVersion)"/>
      <PkgBuild Include="Package\Mac\Framework.pkg"/>
    </ItemGroup>
    <Exec Command="@(PkgBuild, ' ')"/>

    <Exec
      Condition="'$(CodesignKey)' != ''"
      Command="security -v find-identity"/>

    <ItemGroup>
      <ProductBuild Include="productbuild"/>
      <ProductBuild Include="--distribution Package\Mac\Distribution.xml"/>
      <ProductBuild Include="--package-path Package\Mac"/>
      <ProductBuild Include="--resources Package\Mac\Resources"/>
      <ProductBuild Include="$(PackageFile)"/>
      <ProductBuild
        Condition="'$(CodesignKey)' != ''"
        Include="--sign &quot;$(CodesignKey)&quot;"/>
    </ItemGroup>
    <Exec Command="@(ProductBuild, ' ')"/>

    <Delete Files="Package\Mac\Framework.pkg;Package\Mac\Distribution.xml"/>

    <Message Text="Generated $(PackageFile)" Importance="high"/>
  </Target>

  <Target Name="_PackageWin" DependsOnTargets="Install;Xamarin_Build_ReadAllProperties;_PackagePdbs">
    <Copy
      SourceFiles="Package\Windows\bin\$(Configuration)\en-US\XamarinInteractive.msi"
      DestinationFiles="$(PackageOutputDir)XamarinInteractive-$(ReleaseVersion_SemVer).msi"/>
    <Message Text="Generated $(PackageOutputDir)XamarinInteractive-$(ReleaseVersion_SemVer).msi" Importance="high"/>
  </Target>

  <Target Name="PackageNuGet" DependsOnTargets="Xamarin_Build_ReadAllProperties">
    <PropertyGroup>
      <AgentPcl>$(MSBuildThisFileDirectory)Agents\Xamarin.Interactive\bin\$(Configuration)\Xamarin.Interactive.dll</AgentPcl>
      <StrippedPcl>$(MSBuildThisFileDirectory)Agents\Xamarin.Interactive\bin\$(Configuration)\Xamarin.Interactive.Stripped.dll</StrippedPcl>
    </PropertyGroup>
    <Exec Command="$(CILStrip) &quot;$(AgentPcl)&quot; &quot;$(StrippedPcl)&quot;"/>
    <Error Text="NuGet is not provisioned" Condition="!Exists('$(NuGet)')"/>
    <Exec Command="$(NuGet) pack Xamarin.Interactive.nuspec -Version $(WorkbooksIntegrationNuGetPackageVersion) -Properties Configuration=$(Configuration)" WorkingDirectory="Agents\Xamarin.Interactive" />
    <Copy
        SourceFiles="Agents\Xamarin.Interactive\Xamarin.Workbooks.Integration.$(WorkbooksIntegrationNuGetPackageVersion).nupkg"
        DestinationFiles="$(PackageOutputDir)\Xamarin.Workbooks.Integration.$(WorkbooksIntegrationNuGetPackageVersion).nupkg" />
  </Target>

  <Target Name="_PackagePdbs" DependsOnTargets="Xamarin_Build_ReadAllProperties">
    <ItemGroup>
      <Pdbs Include="Agents\**\bin\$(Configuration)\**\*.pdb" />
      <Pdbs Include="Clients\**\bin\$(Configuration)\*.pdb" />
      <Pdbs Include="WorkbookApps\**\bin\$(Configuration)\*.pdb" />
      <Pdbs Include="Clients\Xamarin.Interactive.Client.Windows\bin\$(Configuration)InspectorExe\Xamarin Inspector.pdb" />
    </ItemGroup>
    <PropertyGroup>
      <PdbArchiveName>XamarinInteractive-PDB-$(ReleaseVersion_SemVer).zip</PdbArchiveName>
      <SevenZipListFile>PdbList.lst</SevenZipListFile>
    </PropertyGroup>
    <WriteLinesToFile File="$(SevenZipListFile)" Lines="@(Pdbs)" Overwrite="true" Encoding="UTF-8" />
    <Exec Command="&quot;$(SevenZip)&quot; a $(PdbArchiveName) %40$(SevenZipListFile)" ConsoleToMSBuild="true" />
    <Copy SourceFiles="$(PdbArchiveName)" DestinationFiles="$(PackageOutputDir)$(PdbArchiveName)" />
  </Target>

  <Target Name="TestRegressions">
    <PropertyGroup Condition="'$(SolutionPlatform)' == 'macOS'">
      <TestDriver>Clients\Xamarin.Interactive.Client.Mac\bin\$(Configuration)\Xamarin Workbooks.app\Contents\MacOS\Xamarin Workbooks</TestDriver>
    </PropertyGroup>
    <PropertyGroup Condition="'$(SolutionPlatform)' == 'Windows'">
      <TestDriver>Clients\Xamarin.Interactive.Client.Windows\bin\$(Configuration)\Xamarin Workbooks.exe</TestDriver>
    </PropertyGroup>
    <PropertyGroup>
      <TestCommand Condition=" '$(TestToRun)' != '' ">-test:$(TestToRun)</TestCommand>
    </PropertyGroup>
    <MSBuild
      Projects="Tests\Xamarin.Interactive.Tests\Xamarin.Interactive.Tests.csproj"
      Properties="$(MSBuildCommonProperties)"
      Targets="Build"/>
    <Exec Command="&quot;$(TestDriver)&quot; cli test &quot;Tests\Xamarin.Interactive.Tests\bin\$(Configuration)\net461\Xamarin.Interactive.Tests.dll&quot; -result:&quot;$(MSBuildThisFileDirectory)Tests/Regressions.$(Configuration).xml&quot; $(TestCommand)"/>
  </Target>

  <Target
    Name="TestInspectorInjector" 
    Condition="'$(SolutionPlatform)' == 'macOS'">
    <Exec Command="Tests/Xamarin.Interactive.Tests.InspectorSupport.Mac/bin/$(Configuration)/Xamarin.Interactive.Tests.InspectorSupport.Mac.app/Contents/MacOS/Xamarin.Interactive.Tests.InspectorSupport.Mac"/>
  </Target>

  <Target
    Name="TestInstaller"
    Condition="'$(SolutionPlatform)' == 'macOS'">
    <Exec Command="Tests\installer-upgrade-mac &quot;$(PackageOutputDir)XamarinInteractive-$(ReleaseVersion_SemVer).pkg&quot; &quot;$(ReleaseVersion_UpdateInfo)&quot; &quot;$(ReleaseVersion_AppleCFBundleVersion)&quot;"/>
  </Target>

  <ItemGroup>
    <LintAssemblies Include="@(AndroidAgentFiles)"/>
    <LintAssemblies Include="@(iOSAgentFiles)"/>
    <LintAssemblies Include="@(MacMobileAgentFiles)"/>
    <LintAssemblies Include="@(MacDesktopAgentFiles)"/>
  </ItemGroup>

  <Target Name="TestLint">
    <CallTarget Targets="_TestLintMac" Condition="'$(SolutionPlatform)' == 'macOS'"/>
  </Target>

  <Target Name="_TestLintMac">
    <Exec
      Condition="'%(Extension)' == '.dll'"
      Command="Tools\Xamarin.Interactive.Lint\bin\$(Configuration)\xilint.exe %(LintAssemblies.Identity)"/>
  </Target>

  <Target Name="UpdatePublicApiDefinitions">
    <MSBuild
      Projects="Tools\ApiDump\ApiDump.csproj;Agents\Xamarin.Interactive\Xamarin.Interactive.csproj"
      Properties="Configuration=Release"
      Targets="Build"/>
    <Exec Command="Tools\ApiDump\ApiDump.exe Agents\Xamarin.Interactive\bin/Release\Xamarin.Interactive.dll -o Agents\Xamarin.Interactive\API\Xamarin.Interactive.api.cs"/>
  </Target>

  <Target
    Name="UpdatePublicApiDocs"
    DependsOnTargets="UpdatePublicApiDefinitions">
    <Exec Command="mdoc update --delete Agents\Xamarin.Interactive\bin\Release\Xamarin.Interactive.dll -out Agents\Xamarin.Interactive\API\en"/>
  </Target>

  <Target Name="AssemblePublicApiDocs">
    <Exec Command="mdoc assemble -o Agents\Xamarin.Interactive\API\interactive-api Agents\Xamarin.Interactive\API\en"/>
  </Target>

</Project>
